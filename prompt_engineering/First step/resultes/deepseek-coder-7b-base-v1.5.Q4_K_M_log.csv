Prompt,Prompt Type,Time,Behavior Tree,Model Name
"detect an obstacle, avoid it, and then changing color to green",zero,231.86529874801636,"<s>
    <BTCPP_format>
    <main_tree_to_execute>
    <BehaviorTree ID=""MainTree"">
    <Sequence>
    <Fallback>
    <Sequence>
    <Condition ID=""is_obstacle_detected"">
    <Action ID=""avoid_obstacle"">
    <Action ID=""change_color"">
    </Action>
    </Action>
    </Condition>
    </Sequence>
    </Fallback>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">
    <Condition ID=""is_obstacle_detected"">",deepseek-coder-7b-base-v1.5.Q4_K_M
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",zero,200.69693899154663,"<s>
    <BTCPP_format>
    <main_tree_to_execute>
    <BehaviorTree ID=""MainTree"">
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>",deepseek-coder-7b-base-v1.5.Q4_K_M
"check if path is clear, form a line at the center",zero,200.3024525642395,"<s>
    <BTCPP_format>
    <main_tree_to_execute>
    <BehaviorTree ID=""MainTree"">
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>",deepseek-coder-7b-base-v1.5.Q4_K_M
"find the goal, signal success by changing color to red, and align movement with other swarm agents",zero,200.6911804676056,"<s>
    <BTCPP_format>
    <main_tree_to_execute>
    <BehaviorTree ID=""MainTree"">
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>
    <Sequence>
    <Fallback>",deepseek-coder-7b-base-v1.5.Q4_K_M
"detect target, freeze movement upon reaching it",zero,199.95026397705078,"<s>
    <BTCPP_format>1</BTCPP_format>
    <main_tree_to_execute>main_tree</main_tree_to_execute>
    <BehaviorTree ID=""main_tree"">
        <Sequence>
            <Fallback>
                <Sequence>
                    <IsTargetDetected/>
                    <IsTargetReached/>
                </Sequence>
                <Sequence>
                    <IsAgentInNest/>
                    <AgentMovementFreeze/>
                </Sequence>
            </Fallback>
            <ContinueMovementAgent/>
        </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
        <IsTargetDetected/>
        <IsTargetReached/>
        <IsAgentInNest/>
        <AgentMovementFreeze/>
        <ContinueMovementAgent/>
    </TreeNodesModel>
    </s>
    
    <s>
    <BTCPP_format>1</BTCPP_format>
    <main_tree_to_execute>main_tree</main_tree_to_execute>
    <BehaviorTree ID=""main_tree"">
        <Sequence>
            <Fallback>
                <Sequence>
                    <IsTargetDetected/>
                    <IsTargetReached/>
                </Sequence>
                <Sequence>
                    <IsAgentInNest/>
                    <AgentMovementFreeze/>
                </Sequence>
            </Fallback>
            <ContinueMovementAgent/>
        </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
        <IsTargetDetected/>
        <IsTargetReached/>
        <IsAgentInNest/>
        <AgentMovementFreeze/>
        <ContinueMovementAgent/>
    </TreeNodesModel>
    </s>
    
    <s>
    <BTCPP_format>1</BTCPP_format>
    <main_tree_to_execute>main_tree</main_tree_to_execute>
    <BehaviorTree ID=""main_tree"">
        <Sequence>
            <Fallback>
                <Sequence>
                    <IsTargetDetected/>
                    <IsTargetReached/>
                </Sequence>
                <Sequence>
                    <IsAgentInNest/>
                    <AgentMovementFreeze/>
                </Sequence>
            </Fallback>
            <ContinueMovementAgent/>
        </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
        <IsTargetDetected/>
        <IsTargetReached/>
        <IsAgentInNest/>
        <AgentMovementFreeze/>
        <ContinueMovementAgent/>
    </TreeNodesModel>
    </s>
    
    <s>
    <BTCPP_format>1</BTCPP_format>
    <main_tree_to_execute>main_tree</main_tree_to_execute>
    <BehaviorTree ID=""main_tree"">
        <Sequence>
            <Fallback>
                <Sequence>
                    <IsTargetDetected/>
                    <IsTargetReached/>
                </Sequence>
                <Sequence>
                    <IsAgentInNest/>
                    <AgentMovementFreeze/>
                </Sequence>
            </Fallback>
            <ContinueMovementAgent/>
        </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
        <IsTargetDetected/>
        <IsTargetReached/>
        <IsAgentInNest/>
        <AgentMovementFreeze/>
        <ContinueMovementAgent/>
    </TreeNodesModel>
    </s>
    
    <s>
    <BTCPP_format>1</BTCPP_format>
    <main_tree_to_execute>main_tree</main_tree_to_execute>
    <BehaviorTree ID=""main_tree"">
        <Sequence>
            <Fallback>
                <Sequence>
                    <IsTargetDetected/>
                    <IsTargetReached/>
                </Sequence>
                <Sequence>
                    <IsAgentInNest/>
                    <AgentMovementFreeze/>
                </Sequence>
            </Fallback>
            <ContinueMovementAgent/>
        </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
        <IsTargetDetected/>
        <IsTargetReached/>
        <IsAgentInNest/>
        <AgentMovementFreeze/>
        <ContinueMovementAgent/>
    </TreeNodesModel>
    </s>
    
    <s>
    <BTCPP_format>1</BTCPP_format",deepseek-coder-7b-base-v1.5.Q4_K_M
"detect an obstacle, avoid it, and then changing color to green",one,276.90248346328735,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">
        <BehaviorTree ID=""ObstacleAvoidance"">
            <Fallback name=""High-Level Decision"">
                <Sequence name=""Obstacle Detection Sequence"">
                    <is_obstacle_detected/>
                    <avoid_obstacle/>
                </Sequence>
                <Sequence name=""Change Color Sequence"">
                    <change_color color=""green""/>
                </Sequence>
            </Fallback>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_obstacle_detected""/>
            <Action ID=""avoid_obstacle""/>
            <Action ID=""change_color"" editable=""true"">
                <input_port name=""color""/>
            </Action>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",one,215.34023642539978,"<root BTCPP_format=""3"" main_tree_to_execute=""WanderUntilTarget"">
        <BehaviorTree ID=""WanderUntilTarget"">
            <Fallback name=""WanderUntilTarget"">
                <Sequence name=""Wander"">
                    <move_randomly/>
                </Sequence>
                <Sequence name=""ApproachTarget"">
                    <is_target_detected/>
                    <is_target_reached/>
                    <change_color color=""red""/>
                </Sequence>
            </Fallback>
        </BehaviorTree>
        <TreeNodesModel>
            <Action ID=""move_randomly""/>
            <Condition ID=""is_target_detected""/>
            <Condition ID=""is_target_reached""/>
            <Action ID=""change_color"" editable=""true"">
                <input_port name=""color""/>
            </Action>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"check if path is clear, form a line at the center",one,214.9201943874359,"<root BTCPP_format=""3"" main_tree_to_execute=""PathCheckAndFormLine"">
        <BehaviorTree ID=""PathCheckAndFormLine"">
            <Sequence name=""Check Path Clear"">
                <is_path_clear/>
            </Sequence>
            <Sequence name=""Form Line at Center"">
                <is_line_formed/>
                <form_line/>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_path_clear""/>
            <Condition ID=""is_line_formed""/>
            <Action ID=""form_line""/>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"find the goal, signal success by changing color to red, and align movement with other swarm agents",one,215.28383493423462,"<root BTCPP_format=""3"" main_tree_to_execute=""SwarmBehavior"">
        <BehaviorTree ID=""SwarmBehavior"">
            <Sequence name=""FindGoal"">
                <is_target_detected/>
                <change_color color=""red""/>
            </Sequence>
            <Fallback name=""AlignWithSwarm"">
                <Sequence name=""AlignWithSwarm"">
                    <align_with_swarm/>
                    <flocking/>
                </Sequence>
            </Fallback>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_target_detected""/>
            <Action ID=""change_color"" editable=""true"">
                <input_port name=""color""/>
            </Action>
            <Action ID=""align_with_swarm""/>
            <Action ID=""flocking""/>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"detect target, freeze movement upon reaching it",one,214.34897255897522,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">
        <BehaviorTree ID=""TargetDetection"">
            <Sequence name=""Target Detection Sequence"">
                <is_target_detected/>
                <agent_movement_freeze/>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_target_detected""/>
            <Action ID=""agent_movement_freeze""/>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"detect an obstacle, avoid it, and then changing color to green",two,299.4465401172638,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">
        <BehaviorTree ID=""ObstacleAvoidance"">
            <Sequence name=""Obstacle Avoidance"">
                <is_obstacle_detected/>
                <Fallback name=""Avoid Obstacle"">
                    <avoid_obstacle/>
                    <change_color color=""green""/>
                </Fallback>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_obstacle_detected""/>
            <Action ID=""avoid_obstacle""/>
            <Action ID=""change_color"" editable=""true"">
                <input_port name=""color""/>
            </Action>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",two,232.45641803741455,"<root BTCPP_format=""3"" main_tree_to_execute=""WanderAndApproach"">
        <BehaviorTree ID=""WanderAndApproach"">
            <Sequence name=""WanderAndApproach"">
                <Fallback name=""Wander"">
                    <Sequence>
                        <move_randomly/>
                        <is_target_detected/>
                    </Sequence>
                </Fallback>
                <Fallback name=""ApproachTarget"">
                    <Sequence>
                        <is_target_detected/>
                        <change_color color=""red""/>
                    </Sequence>
                </Fallback>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Action ID=""move_randomly""/>
            <Condition ID=""is_target_detected""/>
            <Action ID=""change_color"" editable=""true"">
                <input_port name=""color""/>
            </Action>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"check if path is clear, form a line at the center",two,232.18510627746582,"<root BTCPP_format=""3"" main_tree_to_execute=""PathCheckAndFormLine"">
        <BehaviorTree ID=""PathCheckAndFormLine"">
            <Sequence name=""PathCheck"">
                <is_path_clear/>
            </Sequence>
            <Fallback name=""FormLineFallback"">
                <Sequence name=""FormLineSequence"">
                    <is_line_formed/>
                    <form_line/>
                </Sequence>
            </Fallback>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_path_clear""/>
            <Condition ID=""is_line_formed""/>
            <Action ID=""form_line""/>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"find the goal, signal success by changing color to red, and align movement with other swarm agents",two,232.54342365264893,"<root BTCPP_format=""3"" main_tree_to_execute=""FindGoal"">
        <BehaviorTree ID=""FindGoal"">
            <Sequence name=""Find Goal"">
                <is_target_detected/>
                <say message=""Goal found!""/>
                <change_color color=""red""/>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_target_detected""/>
            <Action ID=""say""/>
            <Action ID=""change_color""/>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
"detect target, freeze movement upon reaching it",two,231.63031387329102,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">
        <BehaviorTree ID=""TargetDetection"">
            <Sequence name=""Target Detection Sequence"">
                <is_target_detected/>
                <agent_movement_freeze/>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition ID=""is_target_detected""/>
            <Action ID=""agent_movement_freeze""/>
        </TreeNodesModel>
    </root>",deepseek-coder-7b-base-v1.5.Q4_K_M
