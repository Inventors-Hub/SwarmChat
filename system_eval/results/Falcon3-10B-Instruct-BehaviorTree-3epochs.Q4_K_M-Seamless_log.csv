translater,original Prompt,Translated Prompt,BT Model generator,Prompt Type,Time,Behavior Tree,Ground Truth BT
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,detect an obstacle avoid it and then change colour to green,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,122.6553909778595,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""ObstacleAvoidanceAndColorChange""/>
    <BehaviorTree>
    <Sequence name=""ObstacleAvoidance"">
    <Fallback name=""DetectAndAvoidObstacle"">
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    </Fallback>
    <Action name=""change_color"" color=""green""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    <Action name=""change_color"" color=""green""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,63.39948272705078,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""ObstacleAvoidanceAndColorChange""/>
    <BehaviorTree>
    <Sequence name=""ObstacleAvoidance"">
    <Fallback name=""DetectAndAvoidObstacle"">
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    </Fallback>
    <Action name=""change_color"" color=""green""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    <Action name=""change_color"" color=""green""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"If you see an obstacle, you go around it and change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,66.11197185516357,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>ObstacleAvoidance</main_tree_to_execute>
    <BehaviorTree name=""ObstacleAvoidance"">
    <Fallback>
    <Sequence name=""Check for Obstacle"">
    <is_obstacle_detected/>
    <avoid_obstacle/>
    <change_color color=""green""/>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    <Action name=""change_color""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it and then change color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,61.79155492782593,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""ObstacleAvoidanceAndColorChange""/>
    <BehaviorTree>
    <Sequence name=""ObstacleAvoidance"">
    <Fallback name=""DetectAndAvoidObstacle"">
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    </Fallback>
    <Action name=""change_color"" color=""green""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    <Action name=""change_color"" args=""{color}""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Find an obstacle, avoid it and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,110.0675106048584,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">
        <BehaviorTree name=""ObstacleAvoidance"">
          <Sequence>
            <Fallback>
              <ConditionModel id=""is_obstacle_detected""/>
              <ActionModel id=""avoid_obstacle""/>
            </Fallback>
            <ActionModel id=""change_color"" color=""green""/>
          </Sequence>
        </BehaviorTree>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,60.727957010269165,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">
            <BehaviorTree name=""ObstacleAvoidance"">
                <Sequence name=""Main Sequence"">
                    <Fallback name=""Obstacle Detection and Avoidance"">
                        <Condition name=""is_obstacle_detected""/>
                        <Action name=""avoid_obstacle""/>
                    </Fallback>
                    <Action name=""change_color"" color=""green""/>
                </Sequence>
            </BehaviorTree>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"""Uncover the obstacle, bypass it, and then change the color to green"".",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,54.49965023994446,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
        <BehaviorTree name=""main"">
          <Sequence name=""Main Sequence"">
            <Fallback name=""Obstacle Handling"">
              <Condition name=""is_obstacle_detected""/>
              <Action name=""avoid_obstacle""/>
            </Fallback>
            <Action name=""change_color"" color=""green""/>
          </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
          <Condition name=""is_obstacle_detected""/>
          <Action name=""avoid_obstacle""/>
          <Action name=""change_color"" args=""{color}""/>
        </TreeNodesModel>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,59.910794258117676,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">
            <BehaviorTree name=""ObstacleAvoidance"">
                <Sequence name=""Main Sequence"">
                    <Fallback name=""Obstacle Detection and Avoidance"">
                        <Condition name=""is_obstacle_detected""/>
                        <Action name=""avoid_obstacle""/>
                    </Fallback>
                    <Action name=""change_color"" color=""green""/>
                </Sequence>
            </BehaviorTree>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Discover an obstacle, avoid it and change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,66.06441736221313,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""ObstacleAvoidance""/>
    <BehaviorTree name=""ObstacleAvoidance"">
    <Fallback>
    <Sequence>
    <is_obstacle_detected/>
    <avoid_obstacle/>
    <change_color color=""green""/>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    <Action name=""change_color"">
    <Arg name=""color"" value=""green""/>
    </Action>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd""?><?PROCBEHAVIORTREE?>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,wander randomly until a target is detected approach it and signal achievement by changing color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,70.13367295265198,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>WanderUntilTargetDetectedApproachAndSignal</main_tree_to_execute>
    <BehaviorTree name=""WanderUntilTargetDetectedApproachAndSignal"">
    <Fallback>
    <Sequence>
    <is_target_detected/>
    <Sequence>
    <align_with_swarm/>
    <say message=""Approaching target""/>
    <change_color color=""red""/>
    </Sequence>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""align_with_swarm""/>
    <Action name=""say""/>
    <Action name=""change_color""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,randomly until a target is detected approach and report success by changing the color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,73.60389518737793,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
        <BehaviorTree name=""main"">
          <Sequence name=""Main Sequence"">
            <Fallback name=""Random Movement"">
              <Condition name=""is_target_detected""/>
              <Action name=""move_randomly""/>
            </Fallback>
            <Sequence name=""Approach Target"">
              <Condition name=""is_target_detected""/>
              <Action name=""approach_target""/>
              <Action name=""change_color"" color=""red""/>
              <Action name=""report_success""/>
            </Sequence>
          </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
          <Condition name=""is_target_detected""/>
          <Action name=""move_randomly""/>
          <Action name=""approach_target""/>
          <Action name=""change_color"" color=""red""/>
          <Action name=""report_success""/>
        </TreeNodesModel>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Strolling around randomly until a target is recognized approach it and signal success by changing the color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,70.52222061157227,"<root BTCPP_format=""3"" main_tree_to_execute=""StrollingAroundAndApproachingTarget"">
            <BehaviorTree>
                <Sequence name=""StrollingAroundAndApproachingTarget"">
                    <Fallback name=""RandomMovement"">
                        <Condition name=""is_path_clear""/>
                        <Action name=""move_randomly""/>
                    </Fallback>
                    <Condition name=""is_target_detected""/>
                    <Action name=""approach_target""/>
                    <Action name=""change_color"" color=""red""/>
                </Sequence>
            </BehaviorTree>
            <TreeNodesModel>
                <Condition name=""is_path_clear""/>
                <Condition name=""is_target_detected""/>
                <Action name=""move_randomly""/>
                <Action name=""approach_target""/>
                <Action name=""change_color"" color=""red""/>
            </TreeNodesModel>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"Walk randomly until you detect a target, get close to it and mark the achievement by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,74.79784846305847,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
            <BehaviorTree name=""main"">
                <Sequence name=""Main Sequence"">
                    <Fallback name=""Random Walk and Target Detection"">
                        <Condition name=""is_target_detected""/>
                        <Action name=""move_randomly""/>
                    </Fallback>
                    <Sequence name=""Approach Target"">
                        <Condition name=""is_target_detected""/>
                        <Action name=""approach_target""/>
                        <Action name=""change_color"" color=""red""/>
                    </Sequence>
                </Sequence>
            </BehaviorTree>
            <TreeNodesModel>
                <Condition name=""is_target_detected""/>
                <Action name=""move_randomly""/>
                <Action name=""approach_target""/>
                <Action name=""change_color"" color=""red""/>
            </TreeNodesModel>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"Walk casually until a target is detected, approach and signal success by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,107.39358019828796,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>CasualWalkUntilTargetDetected</main_tree_to_execute>
    <BehaviorTree name=""CasualWalkUntilTargetDetected"">
    <Sequence>
    <Fallback>
    <is_target_detected/>
    <move_randomly/>
    </Fallback>
    <Sequence>
    <is_target_detected/>
    <change_color color=""red""/>
    </Sequence>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""move_randomly""/>
    <Action name=""change_color""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree [
<!ELEMENT behavior_tree (BTCPP_format, main_tree_to_execute, BehaviorTree)>
<!ELEMENT BTCPP_format EMPTY>
<!ATTLIST BTCPP_format version CDATA #REQUIRED>
<!ELEMENT main_tree_to_execute (#PCDATA)>
<!ELEMENT BehaviorTree (Sequence|Fallback|Condition|Action)>
<!ELEMENT Sequence (Condition|Action)*>
<!ELEMENT Fallback (Condition|Action)*>
<!ELEMENT Condition EMPTY>
<!ATTLIST Condition name CDATA #REQUIRED>
<!ELEMENT Action EMPTY>
<!ATTLIST Action name CDATA #REQUIRED>
<!ELEMENT TreeNodesModel (Condition|Action)+>
<!ELEMENT Condition EMPTY>
<!ATTLIST Condition name CDATA #REQUIRED>
<!ELEMENT Action EMPTY>
<!ATTLIST Action name CDATA #REQUIRED>
]>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Swirl arbitrarily until a target is detected. Approach it and indicate reach by changing the color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,91.18049478530884,"<root BTCPP_format=""3"" main_tree_to_execute=""SwirlUntilTargetDetected"">
        <BehaviorTree name=""SwirlUntilTargetDetected"">
          <Fallback>
            <Sequence>
              <is_target_detected/>
              <approach_target/>
              <change_color color=""red""/>
            </Sequence>
            <swirl_arbitrarily/>
          </Fallback>
        </BehaviorTree>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Fold it randomly until the target is revealed. Approach it and signal the achievement by changing the color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,73.33945322036743,"<root BTCPP_format=""3"" main_tree_to_execute=""FoldAndReveal"">
            <BehaviorTree name=""FoldAndReveal"">
                <Fallback>
                    <Sequence>
                        <say message=""Folding the target...""/>
                        <move_randomly/>
                        <is_target_detected/>
                        <change_color color=""red""/>
                        <say message=""Target revealed!""/>
                    </Sequence>
                    <Sequence>
                        <say message=""Searching for the target...""/>
                        <move_randomly/>
                        <is_target_detected/>
                        <change_color color=""red""/>
                        <say message=""Target revealed!""/>
                    </Sequence>
                </Fallback>
            </BehaviorTree>
            <TreeNodesModel>
                <Condition name=""is_target_detected""/>
                <Action name=""say""/>
                <Action name=""move_randomly""/>
                <Action name=""change_color""/>
            </TreeNodesModel>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"They wander randomly until a target is detected, approach it, and mark the conquest by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,68.96548557281494,"<root BTCPP_format=""3"" main_tree_to_execute=""WanderUntilTargetDetected"">
            <BehaviorTree>
                <Sequence name=""Main Sequence"">
                    <Fallback name=""Wander Until Target Detected"">
                        <Condition name=""is_target_detected""/>
                        <Action name=""approach_target""/>
                        <Action name=""change_color"" color=""red""/>
                    </Fallback>
                    <Action name=""move_randomly""/>
                </Sequence>
            </BehaviorTree>
            <TreeNodesModel>
                <Condition name=""is_target_detected""/>
                <Action name=""approach_target""/>
                <Action name=""change_color"" color=""red""/>
                <Action name=""move_randomly""/>
            </TreeNodesModel>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Walk slumpily until a target is discovered. Approach it and signal progress by switching color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,136.68937730789185,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
        <BehaviorTree name=""main"">
          <Sequence name=""Main Sequence"">
            <Fallback name=""Walk and Detect Target"">
              <Condition name=""is_target_detected""/>
              <Action name=""change_color"" color=""red""/>
            </Fallback>
            <Action name=""move_randomly""/>
          </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
          <Condition name=""is_target_detected""/>
          <Action name=""change_color"" args=""{color}""/>
          <Action name=""move_randomly""/>
        </TreeNodesModel>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"check if path is clear, form a line at the center",seamless,check if the path is clear and form a line at the centre,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,60.38550162315369,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>check_path_and_form_line</main_tree_to_execute>
    <BehaviorTree name=""check_path_and_form_line"">
    <Fallback>
    <Sequence>
    <is_path_clear/>
    <form_line/>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_path_clear""/>
    <Action name=""form_line""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,"Check if the path is free, then form a line in the center.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,63.52421164512634,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
        <BehaviorTree name=""main"">
          <Sequence name=""PathCheckAndLineFormation"">
            <Fallback name=""ObstacleCheck"">
              <Condition name=""is_path_clear""/>
              <Action name=""avoid_obstacle""/>
            </Fallback>
            <Action name=""form_line""/>
          </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
          <Condition name=""is_path_clear""/>
          <Action name=""avoid_obstacle""/>
          <Action name=""form_line""/>
        </TreeNodesModel>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,56.44653630256653,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
    <BehaviorTree name=""main"">
    <Fallback>
    <Sequence>
    <is_path_clear/>
    <form_line/>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_path_clear""/>
    <Action name=""form_line""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is clear and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,66.15874314308167,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>CheckRoadAndFormLine</main_tree_to_execute>
    <BehaviorTree name=""CheckRoadAndFormLine"">
    <Fallback>
    <Sequence name=""Check Road"">
    <is_path_clear/>
    <form_line/>
    </Sequence>
    <Sequence name=""Obstacle Detected"">
    <is_obstacle_detected/>
    <avoid_obstacle/>
    </Sequence>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_path_clear""/>
    <Action name=""form_line""/>
    <Condition name=""is_obstacle_detected""/>
    <Action name=""avoid_obstacle""/>
    </TreeNodesModel>
    </behavior_tree>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Make sure the route is free and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,86.59161043167114,"<root BTCPP_format=""3"" main_tree_to_execute=""RouteFreeAndLineForm"">
            <BehaviorTree name=""RouteFreeAndLineForm"">
                <Sequence>
                    <Fallback>
                        <ConditionModel id=""is_path_clear""/>
                        <ActionModel id=""move_randomly""/>
                    </Fallback>
                    <ConditionModel id=""is_line_formed""/>
                    <ActionModel id=""form_line""/>
                </Sequence>
            </BehaviorTree>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the path is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,57.47438931465149,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>PathAndLineFormation</main_tree_to_execute>
    <BehaviorTree name=""PathAndLineFormation"">
    <Sequence name=""Main Sequence"">
    <Fallback name=""Check Path and Form Line"">
    <Condition name=""is_path_clear""/>
    <Action name=""form_line""/>
    </Fallback>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_path_clear""/>
    <Action name=""form_line""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and draw a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,143.66962385177612,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
            <BehaviorTree name=""main"">
                <Sequence name=""Check Road and Draw Line"">
                    <Fallback name=""Obstacle Check"">
                        <Condition name=""is_path_clear""/>
                        <Action name=""avoid_obstacle""/>
                    </Fallback>
                    <Action name=""form_line""/>
                </Sequence>
            </BehaviorTree>
            <TreeNodesModel>
                <Condition name=""is_path_clear""/>
                <Action name=""avoid_obstacle""/>
                <Action name=""form_line""/>
            </TreeNodesModel>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the path is free and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,59.71914744377136,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""PathAndLineFormation""/>
    <BehaviorTree>
    <Sequence name=""PathAndLineFormation"">
    <Fallback name=""CheckPath"">
    <Condition name=""is_path_clear""/>
    <Action name=""move_randomly""/>
    </Fallback>
    <Action name=""form_line""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_path_clear""/>
    <Action name=""move_randomly""/>
    <Action name=""form_line""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,53.08490300178528,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
    <BehaviorTree name=""main"">
    <Fallback>
    <Sequence>
    <is_path_clear/>
    <form_line/>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_path_clear""/>
    <Action name=""form_line""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,find the goal signal success by changing color to red and align movement with other swarm agents,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,70.19129371643066,"<behavior_trees>
      <BTCPP_format version=""3""/>
      <main_tree_to_execute name=""GoalSignalFinder""/>
      <BehaviorTree name=""GoalSignalFinder"">
        <Sequence>
          <Fallback>
            <Condition name=""is_target_detected""/>
            <Condition name=""is_target_reached""/>
          </Fallback>
          <Action name=""change_color"" color=""red""/>
          <Action name=""align_with_swarm""/>
        </Sequence>
      </BehaviorTree>
      <TreeNodesModel>
        <Condition name=""is_target_detected""/>
        <Condition name=""is_target_reached""/>
        <Action name=""change_color"" color=""red""/>
        <Action name=""align_with_swarm""/>
      </TreeNodesModel>
    </behavior_trees>
<?DOCTYPE behavior_trees SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, report the success by changing the color to red and align your movement with the other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,63.97418022155762,"<behavior_tree>
      <BTCPP_format version=""3""/>
      <main_tree_to_execute name=""FindTargetAndReport""/>
      <BehaviorTree>
        <Sequence name=""Main Sequence"">
          <Fallback name=""Search for Target"">
            <Condition name=""is_target_detected""/>
            <Action name=""change_color"" color=""red""/>
          </Fallback>
          <Action name=""align_with_swarm""/>
        </Sequence>
      </BehaviorTree>
      <TreeNodesModel>
        <Condition name=""is_target_detected""/>
        <Action name=""change_color"" args=""{color}""/>
        <Action name=""align_with_swarm""/>
      </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and coordinating your movement with other swarm agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,71.14678835868835,"<behavior_tree>
      <BTCPP_format version=""3""/>
      <main_tree_to_execute name=""FindTargetAndSignalSuccess""/>
      <BehaviorTree>
        <Sequence name=""Main Sequence"">
          <Fallback name=""Search for Target"">
            <Condition name=""is_target_detected""/>
            <Action name=""change_color"" color=""red""/>
          </Fallback>
          <Sequence name=""Coordinate Movement"">
            <Action name=""align_with_swarm""/>
            <Action name=""flocking""/>
          </Sequence>
        </Sequence>
      </BehaviorTree>
      <TreeNodesModel>
        <Condition name=""is_target_detected""/>
        <Action name=""change_color"" color=""red""/>
        <Action name=""align_with_swarm""/>
        <Action name=""flocking""/>
      </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, mark success by changing the color to red and align your movement with other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,80.1831157207489,"<behavior_tree>
      <BTCPP_format version=""3""/>
      <main_tree_to_execute name=""FindTargetAndAlignSwarm""/>
      <BehaviorTree>
        <Sequence name=""Main Sequence"">
          <Fallback name=""Search for Target"">
            <Condition name=""is_target_detected""/>
            <Action name=""change_color"" color=""red""/>
            <Action name=""align_with_swarm""/>
          </Fallback>
          <Fallback name=""Move Randomly"">
            <Condition name=""is_path_clear""/>
            <Action name=""move_randomly""/>
          </Fallback>
        </Sequence>
      </BehaviorTree>
      <TreeNodesModel>
        <Condition name=""is_target_detected""/>
        <Action name=""change_color"" color=""red""/>
        <Action name=""align_with_swarm""/>
        <Condition name=""is_path_clear""/>
        <Action name=""move_randomly""/>
      </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and align your movements with the other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,71.55256414413452,"<root BTCPP_format=""3"" main_tree_to_execute=""FindTargetAndSignal"">
            <BehaviorTree name=""FindTargetAndSignal"">
                <Sequence name=""Main Sequence"">
                    <Fallback name=""Search for Target"">
                        <Condition name=""is_target_detected""/>
                        <Action name=""change_color"" color=""red""/>
                        <Action name=""align_with_swarm""/>
                    </Fallback>
                    <Action name=""move_randomly""/>
                </Sequence>
            </BehaviorTree>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the goal, give success by changing the color to red and adjust your movement to other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,63.113072633743286,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""GoalFindingAndAdjustment""/>
    <BehaviorTree>
    <Sequence name=""Main Sequence"">
    <Fallback name=""Find Goal"">
    <Condition name=""is_target_detected""/>
    <Action name=""change_color"" color=""red""/>
    </Fallback>
    <Action name=""align_with_swarm""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""change_color"" args=""{color}""/>
    <Action name=""align_with_swarm""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and adjust the movement to other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,66.7202844619751,"<root BTCPP_format=""3"" main_tree_to_execute=""FindTargetAndSignal"">
            <BehaviorTree name=""FindTargetAndSignal"">
                <Sequence name=""Main Sequence"">
                    <Fallback name=""Search for Target"">
                        <Condition name=""is_target_detected""/>
                        <Action name=""change_color"" color=""red""/>
                    </Fallback>
                    <Action name=""move_randomly""/>
                </Sequence>
            </BehaviorTree>
        </root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, mark the success by changing the color to red and align the movement with other agents of the spark.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,298.6341576576233,"<behavior_tree>
        <BTCPP_format version=""3""/>
        <main_tree_to_execute name=""FindTargetAndAlign""/>
        <BehaviorTree>
            <Sequence name=""Main Sequence"">
                <Fallback name=""Search for Target"">
                    <Condition name=""is_target_detected""/>
                    <Action name=""change_color"" color=""red""/>
                    <Action name=""align_with_swarm""/>
                </Fallback>
                <Action name=""move_randomly""/>
            </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
            <Condition name=""is_target_detected""/>
            <Action name=""change_color"" color=""red""/>
            <Action name=""align_with_swarm""/>
            <Action name=""move_randomly""/>
        </TreeNodesModel>
    </behavior_tree>
<|assistant|>
You are a helpful, respectful, and honest AI assistant. Your task is to generate well-structured XML code for behavior trees based on the provided instructions.

INSTRUCTIONS: It is CRITICAL to use only the following behaviors structured as a dictionary: say: Action Node: Speak the provided message using text-to-speech if it hasn't been spoken before. Args: message (str): The message to be spoken. Returns: Always returns SUCCESS, indicating the action was executed.
flocking: Action Node: Adjust the agent's move vector by blending alignment and separation forces from nearby agents. Returns: Always returns SUCCESS, indicating the action was executed.
align_with_swarm: Action Node: Align the agent's move vector with the average movement of nearby agents. Returns: Always returns SUCCESS, indicating the action was executed.
is_obstacle_detected: Condition node: Determine if any obstacles are detected in the vicinity of the agent. Returns: SUCCESS if an obstacle is detected, FAILURE otherwise.
avoid_obstacle: Action node: Execute an action to avoid detected obstacles. Returns: Always returns SUCCESS, indicating the action was executed.
is_target_detected: Condition node: Check if the target is within a detectable distance from the agent's position. Returns: SUCCESS if the target is within 20 units of distance, FAILURE otherwise.
is_target_reached: Condition node: Check if the agent has reached the target. Returns: SUCCESS if the target is within 15 units of distance, FAILURE otherwise.
change_color: Action Node: Change the agent's color to 'white', 'green', or 'red'. Args: color (str): Color name. Returns: Always returns SUCCESS, indicating the action was executed.
is_agent_in_nest: Condition node: Determine if the agent is in the nest. Returns: SUCCESS if the agent is in the nest, FAILURE otherwise.
agent_movement_freeze: Action node: Freeze the agent's movement, typically to indicate a stop in activity. Returns: Always returns SUCCESS, indicating the action was executed.
continue_movement_agent: Action node: Continue the agent's movement after it has been previously frozen. Returns: Always returns SUCCESS, indicating the action was executed.
move_randomly: Action node: Perform a wandering action where the agent moves randomly within the environment. Returns: Always returns SUCCESS, indicating the action was executed.
is_path_clear: Condition node: Check if the path ahead of the agent is clear of obstacles. Returns: SUCCESS if no obstacles are detected ahead, FAILURE if obstacles are present.
is_line_formed: Condition node: Determine if the agent has formed a line with a reference point at the center of the window. Returns: SUCCESS if the line is formed with the center, FAILURE otherwise.
form_line: Action node: Direct the agent to form a line towards the center of the window. This function adjusts the agent's position to align it with the center. Returns: Always returns SUCCESS, indicating the action was executed. 

to construct behavior tree in XML format for the following command. Including any behavior that is not in the provided dictionary can result in damage to the agents and potentially humans, therefore you are not allowed to do so. AVOID AT ALL COSTS.

USER COMMAND: generate behavior tree to ""Find the target, mark the success by changing the color to red and align the movement with other agents of the spark."". Take a step back and think deeply about the behavior you need for this command. Consider the XML structure and the behaviors you use.

The output MUST follow this XML structure exactly, including:
- A root element with BTCPP_format and main_tree_to_execute attributes.
- A <BehaviorTree> element with an inner structure of Sequences, Fallback, Conditions, and Actions.
- A <TreeNodesModel> section listing all node models","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal progress by changing the color to red and adjusting the movement with other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,65.44143462181091,"<behavior_tree>
      <root BTCPP_format=""3"" main_tree_to_execute=""FindTargetAndSignal""/>
      <BehaviorTree name=""FindTargetAndSignal"">
        <Sequence name=""Main Sequence"">
          <Fallback name=""Search for Target"">
            <Condition name=""is_target_detected""/>
            <Action name=""change_color"" color=""red""/>
          </Fallback>
          <Action name=""align_with_swarm""/>
          <Action name=""move_randomly""/>
        </Sequence>
      </BehaviorTree>
      <TreeNodesModel>
        <Condition name=""is_target_detected""/>
        <Action name=""change_color"" color=""red""/>
        <Action name=""align_with_swarm""/>
        <Action name=""move_randomly""/>
      </TreeNodesModel>
    </behavior_tree>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,detect the target and freeze movement upon reaching it,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,65.67633032798767,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>target_detection_freeze</main_tree_to_execute>
    <BehaviorTree name=""target_detection_freeze"">
    <Sequence name=""Main Sequence"">
    <Fallback name=""Target Detection"">
    <Condition name=""is_target_detected""/>
    <Action name=""agent_movement_freeze""/>
    </Fallback>
    <Condition name=""is_target_reached""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Condition name=""is_target_reached""/>
    <Action name=""agent_movement_freeze""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop any movement by reaching it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,63.93879246711731,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""TargetDetectionAndStop""/>
    <BehaviorTree>
    <Sequence name=""Main Sequence"">
    <Fallback name=""Check Target"">
    <Condition name=""is_target_detected""/>
    <Action name=""avoid_obstacle""/>
    </Fallback>
    <Condition name=""is_target_reached""/>
    <Action name=""agent_movement_freeze""/>
    </Sequence>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Condition name=""is_target_reached""/>
    <Action name=""avoid_obstacle""/>
    <Action name=""agent_movement_freeze""/>
    </TreeNodesModel>
    </behavior_tree>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Recognize the target and stop the movement as soon as you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,71.06007885932922,"<root BTCPP_format=""3"" main_tree_to_execute=""main"">
        <BehaviorTree name=""main"">
          <Sequence name=""TargetRecognitionAndStop"">
            <Fallback name=""CheckTarget"">
              <Condition name=""is_target_detected""/>
              <Action name=""say"" message=""Target detected, stopping movement.""/>
            </Fallback>
            <Condition name=""is_target_reached""/>
            <Action name=""agent_movement_freeze""/>
          </Sequence>
        </BehaviorTree>
        <TreeNodesModel>
          <Condition name=""is_target_detected""/>
          <Condition name=""is_target_reached""/>
          <Action name=""say"" message=""Target detected, stopping movement.""/>
          <Action name=""agent_movement_freeze""/>
        </TreeNodesModel>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop any movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,66.81441640853882,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""TargetDetectionTree""/>
    <BehaviorTree name=""TargetDetectionTree"">
    <Fallback>
    <Sequence>
    <is_target_detected/>
    <agent_movement_freeze/>
    </Sequence>
    <Sequence>
    <is_target_reached/>
    <change_color color=""red""/>
    </Sequence>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""agent_movement_freeze""/>
    <Condition name=""is_target_reached""/>
    <Action name=""change_color""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and block the movement once reached.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,69.8717052936554,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionAndBlocking"">
        <BehaviorTree name=""TargetDetectionAndBlocking"">
          <Sequence name=""Main Sequence"">
            <Fallback name=""Detect Target"">
              <Condition name=""is_target_detected""/>
              <Action name=""change_color"" color=""red""/>
            </Fallback>
            <Condition name=""is_target_reached""/>
            <Action name=""agent_movement_freeze""/>
          </Sequence>
        </BehaviorTree>
      </root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop the movement as soon as it is reached.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,61.95471930503845,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""TargetReachedBehaviorTree""/>
    <BehaviorTree name=""TargetReachedBehaviorTree"">
    <Fallback>
    <Sequence>
    <is_target_detected/>
    <is_target_reached/>
    <agent_movement_freeze/>
    </Sequence>
    <move_randomly/>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Condition name=""is_target_reached""/>
    <Action name=""agent_movement_freeze""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,"""Discover the target and stop the movement after it is achieved"".",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,85.65471625328064,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""TargetDiscoveryTree""/>
    <BehaviorTree name=""TargetDiscoveryTree"">
    <Fallback>
    <Sequence>
    <is_target_detected/>
    <say message=""Target detected, stopping movement.""/>
    <agent_movement_freeze/>
    </Sequence>
    <Sequence>
    <is_target_reached/>
    <change_color color=""green""/>
    <say message=""Target reached, changing color to green.""/>
    </Sequence>
    <Sequence>
    <is_path_clear/>
    <move_randomly/>
    </Sequence>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""say""/>
    <Action name=""agent_movement_freeze""/>
    <Action name=""change_color""/>
    <Action name=""move_randomly""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and freeze the movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,70.1765878200531,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute>TargetReachSequence</main_tree_to_execute>
    <BehaviorTree name=""Main Behavior Tree"">
    <Fallback name=""TargetReachSequence"">
    <Sequence name=""Detect Target Sequence"">
    <is_target_detected/>
    <agent_movement_freeze/>
    </Sequence>
    <Sequence name=""Check if Reached Target"">
    <is_target_reached/>
    <agent_movement_freeze/>
    </Sequence>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""agent_movement_freeze""/>
    <Condition name=""is_target_reached""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Discover the target and freeze the movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,zero,77.07881450653076,"<behavior_tree>
    <BTCPP_format version=""3""/>
    <main_tree_to_execute name=""TargetDiscoveryTree""/>
    <BehaviorTree name=""TargetDiscoveryTree"">
    <Fallback>
    <Sequence>
    <is_target_detected/>
    <say message=""Target detected, proceeding to freeze movement.""/>
    <agent_movement_freeze/>
    </Sequence>
    <Sequence>
    <is_target_reached/>
    <say message=""Target reached, freezing movement.""/>
    <agent_movement_freeze/>
    </Sequence>
    </Fallback>
    </BehaviorTree>
    <TreeNodesModel>
    <Condition name=""is_target_detected""/>
    <Action name=""say""/>
    <Action name=""agent_movement_freeze""/>
    <Condition name=""is_target_reached""/>
    </TreeNodesModel>
    </behavior_tree>
<?DOCTYPE behavior_tree SYSTEM ""BTCPP.dtd"">","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,detect an obstacle avoid it and then change colour to green,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,197.21911191940308,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,82.66580867767334,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"If you see an obstacle, you go around it and change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,92.831960439682,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>        
				<change_color color=""green""/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<move_randomly/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>    
		<Action ID=""move_randomly""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it and then change color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,83.86211156845093,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Find an obstacle, avoid it and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,83.10580921173096,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Color Change Sequence"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,83.98205351829529,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"""Uncover the obstacle, bypass it, and then change the color to green"".",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,89.49094891548157,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Detect and Avoid Obstacle"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Change Color to Green"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,86.45141458511353,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Discover an obstacle, avoid it and change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,96.00678181648254,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>        
				<change_color color=""green""/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<move_randomly/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
		<Action ID=""move_randomly""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,wander randomly until a target is detected approach it and signal achievement by changing color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,93.51983284950256,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeeking"">  
	<BehaviorTree ID=""TargetSeeking"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Wander Until Target Detected"">        
				<move_randomly/>        
				<is_target_detected/>      
			</Sequence>      
			<Sequence name=""Approach and Signal Achievement"">        
				<approach_target/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,randomly until a target is detected approach and report success by changing the color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,96.27094984054565,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Random Movement Sequence"">        
				<move_randomly/>      
			</Sequence>      
			<Sequence name=""Approach Target Sequence"">        
				<is_target_detected/>        
				<change_color color=""red""/>        
				<report_success/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
		<Action ID=""report_success""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Strolling around randomly until a target is recognized approach it and signal success by changing the color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,90.93540287017822,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetRecognition"">  
	<BehaviorTree ID=""TargetRecognition"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Random Movement"">        
				<move_randomly/>      
			</Sequence>      
			<Sequence name=""Approach Target"">        
				<is_target_detected/>        
				<approach_target/>      
				<change_color color=""red""/>    
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"Walk randomly until you detect a target, get close to it and mark the achievement by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,99.89073085784912,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Sequence name=""Main Sequence"">      
			<move_randomly/>      
			<Fallback name=""Target Detection and Response"">        
				<Sequence name=""Detect Target"">          
					<is_target_detected/>          
					<form_line/>          
				</Sequence>        
				<Sequence name=""Achievement Marking"">          
					<change_color color=""red""/>      
				</Sequence>    
			</Fallback>      
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"Walk casually until a target is detected, approach and signal success by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,103.36670899391174,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<approach_target/>      
			<change_color color=""red""/>    
		</Sequence>      
		<Fallback name=""Casual Movement Fallback"">      
			<move_randomly/>      
			<is_path_clear/>      
			<continue_movement_agent/>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""continue_movement_agent""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Swirl arbitrarily until a target is detected. Approach it and indicate reach by changing the color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,88.79242539405823,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Random Movement Sequence"">        
				<move_randomly/>      
			</Sequence>      
			<Sequence name=""Target Approach Sequence"">        
				<is_target_detected/>        
				<approach_target/>      
				<change_color color=""red""/>    
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Fold it randomly until the target is revealed. Approach it and signal the achievement by changing the color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,86.72604036331177,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetRevealing"">  
	<BehaviorTree ID=""TargetRevealing"">    
		<Fallback name=""High-Level Decision"">      
			<Sequence name=""Random Folding Sequence"">        
				<move_randomly/>      
			</Sequence>      
			<Sequence name=""Approach and Signal Sequence"">        
				<is_target_detected/>        
				<approach_target/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"They wander randomly until a target is detected, approach it, and mark the conquest by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,108.45168900489807,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetHunting"">  
	<BehaviorTree ID=""TargetHunting"">    
		<Sequence name=""WanderAndDetect"">      
			<move_randomly/>      
			<is_target_detected/>      
		</Sequence>    
		<Fallback name=""ApproachAndMark"">      
			<Sequence name=""ApproachTarget"">        
				<align_with_swarm/>        
				<change_color color=""red""/>      
			</Sequence>      
			<Sequence name=""MaintainPosition"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Walk slumpily until a target is discovered. Approach it and signal progress by switching color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,87.8267412185669,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeeking"">  
	<BehaviorTree ID=""TargetSeeking"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Search for Target"">        
				<move_randomly/>        
				<is_target_detected/>      
			</Sequence>      
			<Sequence name=""Approach and Signal"">        
				<approach_target/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"check if path is clear, form a line at the center",seamless,check if the path is clear and form a line at the centre,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,59.74224662780762,"<root BTCPP_format=""3"" main_tree_to_execute=""PathAndLineFormation"">  
	<BehaviorTree ID=""PathAndLineFormation"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Check Path and Form Line"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,"Check if the path is free, then form a line in the center.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,57.562718868255615,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Form Line Sequence"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,84.45709252357483,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Fallback name=""Check Path and Form Line"">      
			<Sequence name=""Clear Path Sequence"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""avoid_obstacle""/>    
		<Condition ID=""is_obstacle_detected""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is clear and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,87.15185952186584,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Fallback name=""Check Path and Form Line"">      
			<Sequence name=""Clear Path Sequence"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Make sure the route is free and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,85.21872806549072,"<root BTCPP_format=""3"" main_tree_to_execute=""RouteCheckAndLineFormation"">  
	<BehaviorTree ID=""RouteCheckAndLineFormation"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Clear Path Sequence"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the path is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,86.21209454536438,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Fallback name=""Path Check and Line Formation"">      
			<Sequence name=""Clear Path Sequence"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and draw a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,85.07154679298401,"<root BTCPP_format=""3"" main_tree_to_execute=""PathCheckAndLineDrawing"">  
	<BehaviorTree ID=""PathCheckAndLineDrawing"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Clear Path Sequence"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the path is free and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,74.9484748840332,"<root BTCPP_format=""3"" main_tree_to_execute=""PathAndLineFormation"">  
	<BehaviorTree ID=""PathAndLineFormation"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Check Path and Form Line"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Default Movement"">        
				<move_randomly/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""move_randomly""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,83.65734529495239,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Fallback name=""Check Path and Form Line"">      
			<Sequence name=""Clear Path Sequence"">        
				<is_path_clear/>        
				<form_line/>      
			</Sequence>      
			<Sequence name=""Obstacle Detected Sequence"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""avoid_obstacle""/>    
		<Condition ID=""is_obstacle_detected""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,find the goal signal success by changing color to red and align movement with other swarm agents,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,124.62743401527405,"<root BTCPP_format=""3"" main_tree_to_execute=""SwarmGoalFinder"">  
	<BehaviorTree ID=""SwarmGoalFinder"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Align and Change Color Sequence"">        
				<align_with_swarm/>        
				<change_color color=""red""/>      
			</Sequence>      
			<Sequence name=""Movement Freeze Sequence"">        
				<agent_movement_freeze/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""say""/>    
		<Action ID=""flocking""/>    
		<Action ID=""align_with_swarm""/>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""change_color""/>    
		<Condition ID=""is_agent_in_nest""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Condition ID=""is_line_formed""/>    
		<Action ID=""form_line""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, report the success by changing the color to red and align your movement with the other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,91.72946763038635,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<Sequence name=""Target Reached Sequence"">        
				<is_target_reached/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Sequence>      
			<Fallback name=""Obstacle Handling"">        
				<is_obstacle_detected/>        
				<avoid_obstacle/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""avoid_obstacle""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and coordinating your movement with other swarm agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,92.71670150756836,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Find Target Sequence"">        
				<is_target_detected/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Sequence>      
			<Sequence name=""Search Sequence"">        
				<move_randomly/>        
				<is_path_clear/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""continue_movement_agent""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, mark success by changing the color to red and align your movement with other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,106.2080671787262,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearchAndMark"">  
	<BehaviorTree ID=""TargetSearchAndMark"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<Sequence name=""Target Reached Sequence"">        
				<is_target_reached/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Sequence>      
			<Fallback name=""Search and Avoid Obstacles"">        
				<Sequence name=""Obstacle Avoidance"">          
					<is_obstacle_detected/>          
					<avoid_obstacle/>        
				</Sequence>        
				<move_randomly/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""move_randomly""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and align your movements with the other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,112.2974464893341,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearchAndSignal"">  
	<BehaviorTree ID=""TargetSearchAndSignal"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<Sequence name=""Target Reached Sequence"">        
				<is_target_reached/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Sequence>      
			<Fallback name=""Search and Avoid Obstacles"">        
				<Sequence name=""Obstacle Avoidance"">          
					<is_obstacle_detected/>          
					<avoid_obstacle/>        
				</Sequence>        
				<Sequence name=""Continue Movement"">          
					<continue_movement_agent/>          
					<move_randomly/>        
				</Sequence>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""move_randomly""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the goal, give success by changing the color to red and adjust your movement to other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,76.92951655387878,"<root BTCPP_format=""3"" main_tree_to_execute=""GoalFinding"">  
	<BehaviorTree ID=""GoalFinding"">    
		<Fallback name=""High-Level Decision"">      
			<Sequence name=""Find Target Sequence"">        
				<is_target_detected/>        
				<change_color color=""red""/>      
			</Sequence>      
			<Sequence name=""Align with Swarm Sequence"">        
				<align_with_swarm/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>  
		<Action ID=""avoid_obstacle"" editable=""true"">
      	<input_port name=""direction""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and adjust the movement to other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,75.05071234703064,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Find Target Sequence"">        
				<is_target_detected/>        
				<change_color color=""red""/>      
			</Sequence>      
			<Sequence name=""Search and Align Sequence"">        
				<move_randomly/>        
				<align_with_swarm/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""align_with_swarm""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, mark the success by changing the color to red and align the movement with other agents of the spark.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,76.45467281341553,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Find Target Sequence"">        
				<is_target_detected/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Sequence>      
			<Sequence name=""Search Sequence"">        
				<move_randomly/>        
				<is_target_detected/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal progress by changing the color to red and adjusting the movement with other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,80.13421320915222,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Find Target Sequence"">        
				<is_target_detected/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Sequence>      
			<Sequence name=""Continue Movement Sequence"">        
				<move_randomly/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""continue_movement_agent""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,detect the target and freeze movement upon reaching it,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,75.55621790885925,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Fallback name=""High-Level Decision"">      
			<Sequence name=""Target Detected Sequence"">        
				<is_target_detected/>        
				<agent_movement_freeze/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<move_randomly/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""move_randomly""/>  
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop any movement by reaching it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,83.2830114364624,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Fallback name=""High-Level Decision"">      
			<Sequence name=""Target Detected Sequence"">        
				<is_target_detected/>        
				<agent_movement_freeze/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<move_randomly/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Recognize the target and stop the movement as soon as you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,67.09717917442322,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetRecognition"">  
	<BehaviorTree ID=""TargetRecognition"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Target Detected Sequence"">        
				<is_target_detected/>        
				<agent_movement_freeze/>      
			</Sequence>      
			<Sequence name=""Normal Movement Sequence"">        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop any movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,81.68592691421509,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Target Detected Sequence"">        
				<is_target_detected/>        
				<agent_movement_freeze/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<move_randomly/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and block the movement once reached.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,79.17741227149963,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionAndBlocking"">  
	<BehaviorTree ID=""TargetDetectionAndBlocking"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Detect Target Sequence"">        
				<is_target_detected/>        
				<avoid_obstacle/>      
			</Sequence>      
			<Sequence name=""Reach Target Sequence"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop the movement as soon as it is reached.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,61.988590717315674,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<agent_movement_freeze/>      
			<is_target_reached/>      
			<continue_movement_agent/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Condition ID=""is_target_reached""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,"""Discover the target and stop the movement after it is achieved"".",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,62.14949440956116,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDiscovery"">  
	<BehaviorTree ID=""TargetDiscovery"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<agent_movement_freeze/>      
			<is_target_reached/>      
			<continue_movement_agent/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""continue_movement_agent""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and freeze the movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,74.99639534950256,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Fallback name=""Main Decision"">      
			<Sequence name=""Target Detected Sequence"">        
				<is_target_detected/>        
				<agent_movement_freeze/>      
			</Sequence>      
			<Sequence name=""Normal Operation Sequence"">        
				<move_randomly/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""move_randomly""/>  
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Discover the target and freeze the movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,one,50.353426694869995,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDiscovery"">  
	<BehaviorTree ID=""TargetDiscovery"">    
		<Sequence name=""Main Sequence"">      
			<is_target_detected/>      
			<agent_movement_freeze/>      
		</Sequence>    
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>  
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,detect an obstacle avoid it and then change colour to green,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,203.76391911506653,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Handling"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>    
		</Sequence>    
		<change_color color=""green""/>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,75.88687944412231,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Handling"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
		</Sequence>    
		<change_color color=""green""/>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"If you see an obstacle, you go around it and change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,82.94536089897156,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Fallback name=""Obstacle Handling"">      
			<Sequence>        
				<is_obstacle_detected/>        
				<avoid_obstacle/>        
				<change_color color=""green""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it and then change color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,80.59395551681519,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Handling"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
		</Sequence>    
		<change_color color=""green""/>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Find an obstacle, avoid it and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,79.41347455978394,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Detection and Avoidance"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
		</Sequence>    
		<change_color color=""green""/>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,71.65942931175232,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Handling"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
		</Sequence>    
		<change_color color=""green""/>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"""Uncover the obstacle, bypass it, and then change the color to green"".",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,78.13699722290039,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Uncover and Bypass Obstacle"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
			<change_color color=""green""/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Detect an obstacle, avoid it, and then change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,72.04639148712158,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Handling"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
		</Sequence>    
		<change_color color=""green""/>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"detect an obstacle, avoid it, and then flock safely with other agents",seamless,"Discover an obstacle, avoid it and change the color to green.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,69.7708637714386,"<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidance"">  
	<BehaviorTree ID=""ObstacleAvoidance"">    
		<Sequence name=""Obstacle Handling"">      
			<is_obstacle_detected/>      
			<avoid_obstacle/>      
			<change_color color=""green""/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_obstacle_detected""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""ObstacleAvoidanceAndFlocking"">
	<BehaviorTree ID=""ObstacleAvoidanceAndFlocking"">
		<Sequence name=""Detect and Avoid Obstacle Then Flock"">
			<is_obstacle_detected/>
			<avoid_obstacle/>
			<change_color color=""green""/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_obstacle_detected""/>
		<Action ID=""avoid_obstacle""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
	</TreeNodesModel>
</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,wander randomly until a target is detected approach it and signal achievement by changing color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,79.21149373054504,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeeking"">  
	<BehaviorTree ID=""TargetSeeking"">    
		<Sequence name=""Wander and Seek"">      
			<move_randomly/>      
			<Fallback name=""Target Handling"">        
				<is_target_detected/>        
				<Sequence>          
					<approach_target/>          
					<change_color color=""red""/>      
				</Sequence>    
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,randomly until a target is detected approach and report success by changing the color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,86.81989860534668,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetApproach"">  
	<BehaviorTree ID=""TargetApproach"">    
		<Sequence name=""Movement and Target Detection"">      
			<move_randomly/>      
			<Fallback name=""Target Handling"">        
				<is_target_detected/>        
				<Sequence>          
					<approach_target/>          
					<report_success/>          
					<change_color color=""red""/>      
				</Sequence>    
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""report_success""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Strolling around randomly until a target is recognized approach it and signal success by changing the color to red,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,80.19192266464233,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetApproach"">  
	<BehaviorTree ID=""TargetApproach"">    
		<Sequence name=""Initial Movement"">      
			<move_randomly/>      
		</Sequence>    
		<Fallback name=""Target Handling"">      
			<is_target_detected/>      
			<Sequence name=""Approach Target"">        
				<align_with_swarm/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"Walk randomly until you detect a target, get close to it and mark the achievement by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,82.34689378738403,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeekingBehavior"">  
	<BehaviorTree ID=""TargetSeekingBehavior"">    
		<Sequence name=""Random Movement Until Target Detected"">      
			<move_randomly/>      
			<Fallback name=""Check for Target"">        
				<is_target_detected/>        
				<Sequence name=""Approach and Mark Target"">          
					<form_line/>          
					<change_color color=""red""/>      
				</Sequence>    
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"Walk casually until a target is detected, approach and signal success by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,79.01185059547424,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetApproach"">  
	<BehaviorTree ID=""TargetApproach"">    
		<Sequence name=""Casual Movement"">      
			<move_randomly/>      
		</Sequence>    
		<Fallback name=""Target Handling"">      
			<is_target_detected/>      
			<Sequence name=""Approach and Signal"">        
				<form_line/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Swirl arbitrarily until a target is detected. Approach it and indicate reach by changing the color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,79.93263649940491,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeekingBehavior"">  
	<BehaviorTree ID=""TargetSeekingBehavior"">    
		<Sequence name=""Initial Movement"">      
			<move_randomly/>      
		</Sequence>    
		<Fallback name=""Target Handling"">      
			<is_target_detected/>      
			<Sequence name=""Approach and Indicate"">        
				<form_line/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Fold it randomly until the target is revealed. Approach it and signal the achievement by changing the color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,77.68788743019104,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetAchievement"">  
	<BehaviorTree ID=""TargetAchievement"">    
		<Sequence name=""Initial Exploration"">      
			<move_randomly/>      
			<is_target_detected/>    
		</Sequence>    
		<Fallback name=""Approach and Signal"">      
			<Sequence>        
				<approach_target/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,"They wander randomly until a target is detected, approach it, and mark the conquest by changing the color to red.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,86.52699422836304,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetHunting"">  
	<BehaviorTree ID=""TargetHunting"">    
		<Sequence name=""Wander Until Target Detected"">      
			<move_randomly/>      
			<Fallback name=""Approach and Mark Target"">        
				<is_target_detected/>        
				<Sequence>          
					<approach_target/>          
					<change_color color=""red""/>      
				</Sequence>    
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""approach_target""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"wander randomly until a target is detected, approach it, and signal achievement by changing color to red",seamless,Walk slumpily until a target is discovered. Approach it and signal progress by switching color to red.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,79.3622670173645,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeekingBehavior"">  
	<BehaviorTree ID=""TargetSeekingBehavior"">    
		<Sequence name=""Initial Movement"">      
			<move_randomly/>      
		</Sequence>    
		<Fallback name=""Target Handling"">      
			<is_target_detected/>      
			<Sequence name=""Approach and Signal"">        
				<form_line/>        
				<change_color color=""red""/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""WanderApproachAndSignal"">
	<BehaviorTree ID=""WanderApproachAndSignal"">
		<Sequence name=""Wander, Approach, and Signal"">
			<Fallback name=""DetectTargetOrWander"">
				<Sequence name=""TargetDetectedAndReached"">
					<is_target_detected/>
					<is_target_reached/>
					<change_color color=""red""/>
				</Sequence>
			</Fallback>
			<wander/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""wander""/>
		<Action ID=""change_color"" editable=""true"">
			<input_port name=""color""/>
        </Action>
    </TreeNodesModel>
	</root>"
"check if path is clear, form a line at the center",seamless,check if the path is clear and form a line at the centre,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,62.35905075073242,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Path Check and Line Formation"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,"Check if the path is free, then form a line in the center.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,57.89775776863098,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Path Check and Line Formation"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,61.77922701835632,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Check Path and Form Line"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is clear and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,62.003960371017456,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Check Path and Form Line"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Make sure the route is free and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,72.32842063903809,"<root BTCPP_format=""3"" main_tree_to_execute=""PathClearAndLineForm"">  
	<BehaviorTree ID=""PathClearAndLineForm"">    
		<Sequence name=""Check Path and Form Line"">      
			<is_path_clear/>      
			<Fallback name=""Obstacle Handling"">        
				<avoid_obstacle/>      
			</Fallback>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the path is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,64.01652312278748,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Path Check and Line Formation"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and draw a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,63.38071608543396,"<root BTCPP_format=""3"" main_tree_to_execute=""PathCheckAndLineDrawing"">  
	<BehaviorTree ID=""PathCheckAndLineDrawing"">    
		<Sequence name=""Path Check and Line Formation"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the path is free and form a line in the center.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,64.17792558670044,"<root BTCPP_format=""3"" main_tree_to_execute=""PathAndLineFormation"">  
	<BehaviorTree ID=""PathAndLineFormation"">    
		<Sequence name=""Check Path and Form Line"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"check if path is clear, form a line at the center",seamless,Check if the road is free and form a line in the middle.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,62.1840934753418,"<root BTCPP_format=""3"" main_tree_to_execute=""PathFormation"">  
	<BehaviorTree ID=""PathFormation"">    
		<Sequence name=""Check Path and Form Line"">      
			<is_path_clear/>      
			<form_line/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""form_line""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""PathClearLineFormation"">
	<BehaviorTree ID=""PathClearLineFormation"">
		<Sequence name=""Clear Path and Form Line"">
			<is_path_clear/>
			<form_line/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_path_clear""/>
		<Action ID=""form_line""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,find the goal signal success by changing color to red and align movement with other swarm agents,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,75.71099376678467,"<root BTCPP_format=""3"" main_tree_to_execute=""SwarmGoalFinding"">  
	<BehaviorTree ID=""SwarmGoalFinding"">    
		<Sequence name=""Find and Align with Goal"">      
			<is_target_detected/>      
			<change_color color=""red""/>      
			<align_with_swarm/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""say"" editable=""true"">
      	<input_port name=""message""/>
    	</Action>
		<Action ID=""flocking"" editable=""true"">
      	<input_port name=""move_vector""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, report the success by changing the color to red and align your movement with the other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,97.16563320159912,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearchAndReport"">  
	<BehaviorTree ID=""TargetSearchAndReport"">    
		<Sequence name=""Target Search Sequence"">      
			<is_target_detected/>      
			<Fallback name=""Target Reached Fallback"">        
				<is_target_reached/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Fallback>      
			<move_randomly/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""agent_movement_freeze"" editable=""true"">
      	<input_port name=""duration""/>
    	</Action>
		<Action ID=""continue_movement_agent"" editable=""true"">
      	<input_port name=""resume_time""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and coordinating your movement with other swarm agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,103.54414391517639,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearchAndSignal"">  
	<BehaviorTree ID=""TargetSearchAndSignal"">    
		<Sequence name=""Target Search Sequence"">      
			<is_target_detected/>      
			<change_color color=""red""/>      
			<align_with_swarm/>    
		</Sequence>    
		<Fallback name=""Movement Fallback"">      
			<Sequence>        
				<move_randomly/>        
				<is_path_clear/>      
			</Sequence>    
			<Sequence>        
				<avoid_obstacle/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""avoid_obstacle""/>    
		<Action ID=""continue_movement_agent""/>    
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, mark success by changing the color to red and align your movement with other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,102.04076313972473,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeekingSwarm"">  
	<BehaviorTree ID=""TargetSeekingSwarm"">    
		<Sequence name=""Seek and Mark Target"">      
			<is_target_detected/>      
			<change_color color=""red""/>      
			<align_with_swarm/>    
		</Sequence>    
		<Fallback name=""Normal Operations"">      
			<Sequence>        
				<move_randomly/>        
				<is_path_clear/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""say"" editable=""true"">
      	<input_port name=""message""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and align your movements with the other agents of the swarm.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,95.6384654045105,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearchAndSignal"">  
	<BehaviorTree ID=""TargetSearchAndSignal"">    
		<Sequence name=""Target Search Sequence"">      
			<is_target_detected/>      
			<Fallback name=""Target Reached Fallback"">        
				<is_target_reached/>        
				<change_color color=""red""/>        
				<align_with_swarm/>      
			</Fallback>      
			<move_randomly/>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""change_color""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""agent_movement_freeze"" editable=""true"">
      	<input_port name=""freeze""/>
    	</Action>
		<Action ID=""continue_movement_agent"" editable=""true"">
      	<input_port name=""resume""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the goal, give success by changing the color to red and adjust your movement to other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,88.83271288871765,"<root BTCPP_format=""3"" main_tree_to_execute=""GoalFinding"">  
	<BehaviorTree ID=""GoalFinding"">    
		<Sequence name=""Find and Reach Goal"">      
			<is_target_detected/>      
			<Fallback name=""Adjust Movement"">        
				<align_with_swarm/>        
				<flocking/>      
			</Fallback>    
		</Sequence>    
		<Sequence name=""Achieve Goal"">      
			<is_target_reached/>      
			<change_color color=""red""/>      
			<agent_movement_freeze/>      
		</Sequence>    
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""flocking""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
		<Action ID=""agent_movement_freeze""/>    
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal success by changing the color to red and adjust the movement to other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,101.40209984779358,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Sequence name=""Target Detection and Response"">      
			<is_target_detected/>      
			<change_color color=""red""/>      
			<align_with_swarm/>    
		</Sequence>    
		<Fallback name=""Normal Operations"">      
			<Sequence>        
				<move_randomly/>        
				<is_path_clear/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""say"" editable=""true"">
      	<input_port name=""message""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, mark the success by changing the color to red and align the movement with other agents of the spark.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,68.59170746803284,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSeeking"">  
	<BehaviorTree ID=""TargetSeeking"">    
		<Sequence name=""Seek and Mark Target"">      
			<is_target_detected/>      
			<Fallback name=""Align with Swarm"">        
				<align_with_swarm/>      
			</Fallback>      
			<change_color color=""red""/>    
		</Sequence>    
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"find the goal, signal success by changing color to red, and align movement with other swarm agents",seamless,"Find the target, signal progress by changing the color to red and adjusting the movement with other agents.",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,99.81929516792297,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetSearch"">  
	<BehaviorTree ID=""TargetSearch"">    
		<Sequence name=""Target Detection and Response"">      
			<is_target_detected/>      
			<change_color color=""red""/>      
			<align_with_swarm/>    
		</Sequence>    
		<Fallback name=""Normal Operations"">      
			<Sequence>        
				<move_randomly/>        
				<is_path_clear/>        
				<continue_movement_agent/>      
			</Sequence>    
		</Fallback>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>    
		<Action ID=""align_with_swarm""/>    
		<Action ID=""move_randomly""/>    
		<Condition ID=""is_path_clear""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""say"" editable=""true"">
      	<input_port name=""message""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""GoalAchievementAndAlignment"">
	<BehaviorTree ID=""GoalAchievementAndAlignment"">
		<Sequence name=""Find Goal, Signal and Align"">
			<is_target_detected/>
			<is_target_reached/>
			<change_color color=""red""/>
			<align_with_swarm/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""change_color""/>
		<Action ID=""align_with_swarm""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,detect the target and freeze movement upon reaching it,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,70.25303316116333,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionAndFreeze"">  
	<BehaviorTree ID=""TargetDetectionAndFreeze"">    
		<Sequence name=""Target Detection and Freeze"">      
			<is_target_detected/>      
			<Fallback name=""Movement Control"">        
				<agent_movement_freeze/>        
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop any movement by reaching it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,76.25755190849304,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetResponse"">  
	<BehaviorTree ID=""TargetResponse"">    
		<Sequence name=""Target Detection and Response"">      
			<is_target_detected/>      
			<Fallback name=""Stop Movement Sequence"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Recognize the target and stop the movement as soon as you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,80.4860827922821,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetRecognition"">  
	<BehaviorTree ID=""TargetRecognition"">    
		<Sequence name=""Movement and Target Detection"">      
			<is_target_detected/>      
			<Fallback name=""Stop Movement"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop any movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,66.35952520370483,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetection"">  
	<BehaviorTree ID=""TargetDetection"">    
		<Sequence name=""Target Detection and Stop"">      
			<is_target_detected/>      
			<Fallback name=""Stop Movement"">        
				<agent_movement_freeze/>        
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and block the movement once reached.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,75.83681845664978,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionAndBlocking"">  
	<BehaviorTree ID=""TargetDetectionAndBlocking"">    
		<Sequence name=""Target Detection and Blocking"">      
			<is_target_detected/>      
			<Fallback name=""Movement Control"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and stop the movement as soon as it is reached.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,81.40462565422058,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionAndStop"">  
	<BehaviorTree ID=""TargetDetectionAndStop"">    
		<Sequence name=""Movement Control"">      
			<is_target_detected/>      
			<Fallback name=""Stop Movement"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,"""Discover the target and stop the movement after it is achieved"".",Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,77.89834451675415,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDiscovery"">  
	<BehaviorTree ID=""TargetDiscovery"">    
		<Sequence name=""Target Discovery Sequence"">      
			<is_target_detected/>      
			<Fallback name=""Stop Movement"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""continue_movement_agent""/>    
		<Action ID=""move_randomly""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Detect the target and freeze the movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,70.29077172279358,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionAndFreeze"">  
	<BehaviorTree ID=""TargetDetectionAndFreeze"">    
		<Sequence name=""Target Detection and Freeze"">      
			<is_target_detected/>      
			<Fallback name=""Movement Control"">        
				<agent_movement_freeze/>        
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""say"" editable=""true"">
      	<input_port name=""message""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
"detect target, freeze movement upon reaching it",seamless,Discover the target and freeze the movement when you reach it.,Falcon3-10B-Instruct-BehaviorTree-3epochs.Q4_K_M,two,71.42345786094666,"<root BTCPP_format=""3"" main_tree_to_execute=""TargetDiscovery"">  
	<BehaviorTree ID=""TargetDiscovery"">    
		<Sequence name=""Target Discovery and Freeze"">      
			<is_target_detected/>      
			<Fallback name=""Movement Control"">        
				<is_target_reached/>        
				<agent_movement_freeze/>      
			</Fallback>    
		</Sequence>  
	</BehaviorTree>  
	<TreeNodesModel>    
		<Condition ID=""is_target_detected""/>    
		<Condition ID=""is_target_reached""/>    
		<Action ID=""agent_movement_freeze""/>    
		<Action ID=""change_color"" editable=""true"">
      	<input_port name=""color""/>
    	</Action>
	</TreeNodesModel>
</root>","<root BTCPP_format=""3"" main_tree_to_execute=""TargetDetectionFreeze"">
	<BehaviorTree ID=""TargetDetectionFreeze"">
		<Sequence name=""Detect and Freeze"">
			<is_target_detected/>
			<is_target_reached/>
			<agent_movement_freeze/>
		</Sequence>
	</BehaviorTree>
	<TreeNodesModel>
		<Condition ID=""is_target_detected""/>
		<Condition ID=""is_target_reached""/>
		<Action ID=""agent_movement_freeze""/>
	</TreeNodesModel>
</root>"
